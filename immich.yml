networks:
  immich:
  proxy:

volumes:
  immich-database-data:
  immich-model-cache:
  immich-redis-data:

services:
  immich:
    image: ghcr.io/immich-app/immich-server:v1.120.1
    depends_on:
      immich-redis:
        condition: service_healthy
      immich-database:
        condition: service_healthy
    devices:
      - ${IMMICH_TRANSCODE_CARD}:/dev/dri/card0
    environment:
      - IMMICH_ENV=production
      - IMMICH_LOG_LEVEL=${IMMICH_LOG_LEVEL:-log}
      - DB_HOSTNAME=immich-database
      - DB_USERNAME=${IMMICH_DB_USERNAME:-postgres}
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_DATABASE_NAME=${IMMICH_DB_DATABASE_NAME:-immich}
      - REDIS_HOSTNAME=immich-redis
      - JWT_SECRET=${IMMICH_JWT_SECRET}
      - TZ=${TIMEZONE}
    expose:
      - 2283 # webui
    extends:
      file: common.yml
      service: log-to-json
    healthcheck:
      disable: false
    networks:
      - proxy
      - immich
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${IMMICH_UPLOAD_LOCATION}:/usr/src/app/upload

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:v1.120.1
    environment:
      - NODE_ENV=production
    extends:
      file: common.yml
      service: log-to-json
    healthcheck:
      disable: false
    networks:
      - immich
    restart: unless-stopped
    volumes:
      - immich-model-cache:/cache
      - ${IMMICH_UPLOAD_LOCATION}:/usr/src/app/upload

  immich-redis:
    image: docker.io/redis:6.2-alpine
    expose:
      - 6379 # api
    extends:
      file: common.yml
      service: log-to-json
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - immich
    restart: unless-stopped
    volumes:
      - immich-redis-data:/data

  immich-database:
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0
    command:
      [
        "postgres",
        "-c",
        "shared_preload_libraries=vectors.so",
        "-c",
        'search_path="$$user", public, vectors',
        "-c",
        "logging_collector=on",
        "-c",
        "max_wal_size=2GB",
        "-c",
        "shared_buffers=512MB",
        "-c",
        "wal_compression=on",
      ]
    environment:
      - POSTGRES_USER=${IMMICH_DB_USERNAME}
      - POSTGRES_PASSWORD=${IMMICH_DB_PASSWORD}
      - POSTGRES_DB=${IMMICH_DB_DATABASE_NAME}
      - POSTGRES_INITDB_ARGS="--data-checksums"
    expose:
      - 5432 # db
    extends:
      file: common.yml
      service: log-to-json
    healthcheck:
      test: pg_isready --dbname='${IMMICH_DB_DATABASE_NAME}' --username='${IMMICH_DB_USERNAME}' || exit 1; Chksum="$$(psql --dbname='${IMMICH_DB_DATABASE_NAME}' --username='${IMMICH_DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    networks:
      - immich
    restart: unless-stopped
    volumes:
      - immich-database-data:/var/lib/postgresql/data
