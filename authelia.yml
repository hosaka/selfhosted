networks:
  proxy:
  authelia:
  ldap:

volumes:
  authelia-database-data:
  authelia-redis-data:
  lldap-data:

configs:
  authelia.configuration.yml:
    content: |
      access_control:
        default_policy: two_factor

      authentication_backend:
        # password reset through authelia works fine
        password_reset:
          disable: false

        # how often to check if there is an user update in ldap
        refresh_interval: 1m

        ldap:
          implementation: lldap
          address: ldap://lldap:3890
          base_dn: ${LLDAP_BASE_DN}

          # "uid" should be the username you created for authentication with the "lldap_strict_readonly" permission
          # if using Authelia to change user passwords, then this user needs the "lldap_password_manager" permission
          user: uid=authelia,ou=people,${LLDAP_BASE_DN}
          password: ${AUTHELIA_LDAP_PASSWORD}

          # to allow sign in both with username and email, comment this filter to use defaults
          # users_filter: "(&({username_attribute}={input})(objectClass=person))"

      session:
        secret: ${AUTHELIA_SESSION_SECRET}
        cookies:
          - domain: ${PROXY_PUBLIC_DOMAIN}
            authelia_url: https://auth.${PROXY_PUBLIC_DOMAIN}
            # default_redirection_url: https://home.${PROXY_PUBLIC_DOMAIN}
        redis:
          host: authelia-redis
          port: 6379

      storage:
        encryption_key: ${AUTHELIA_STORAGE_ENCRYPTION_KEY}
        postgres:
          address: authelia-database
          database: ${AUTHELIA_DB_DATABASE_NAME:-authelia}
          username: ${AUTHELIA_DB_USERNAME}
          password: ${AUTHELIA_DB_PASSWORD}

      totp:
        issuer: ${PROXY_PUBLIC_DOMAIN}

      notifier:
        smtp:
          address: ${AUTHELIA_SMTP_ADDRESS}
          username: ${AUTHELIA_SMTP_USERNAME}
          password: ${AUTHELIA_SMTP_PASSWORD}
          sender: ${AUTHELIA_SMTP_SENDER}

      identity_validation:
        reset_password:
          jwt_secret: ${AUTHELIA_JWT_SECRET}

      identity_providers:
        oidc:
          jwks:
            # todo: get this from the env somehow so X_AUTHELIA_CONFIG_FILTERS can be removed
            - key: {{ secret "/config/jwks/private.pem" | mindent 10 "|" | msquote }}
          claims_policies:
            grafana:
              id_token: ['email', 'name', 'groups', 'preferred_username']
          clients:
            - client_name: grafana
              client_id: ${AUTH_GRAFANA_CLIENT_ID}
              client_secret: ${AUTH_GRAFANA_CLIENT_SECRET_HASH}
              claims_policy: grafana
              public: false
              authorization_policy: two_factor
              require_pkce: true
              pkce_challenge_method: S256
              redirect_uris:
                - https://grafana.${PROXY_PUBLIC_DOMAIN}/login/generic_oauth
              scopes:
                - openid
                - email
                - profile
                - groups
              response_types:
                - code
              grant_types:
                - authorization_code
              access_token_signed_response_alg: none
              userinfo_signed_response_alg: none
              token_endpoint_auth_method: client_secret_basic

            - client_name: forgejo
              client_id: ${AUTH_FORGEJO_CLIENT_ID}
              client_secret: ${AUTH_FORGEJO_CLIENT_SECRET_HASH}
              public: false
              authorization_policy: two_factor
              require_pkce: true
              pkce_challenge_method: S256
              redirect_uris:
                - https://code.${PROXY_PUBLIC_DOMAIN}/user/oauth2/Authelia/callback
              scopes:
                - openid
                - email
                - profile
                - groups
              response_types:
                - code
              grant_types:
                - authorization_code
              access_token_signed_response_alg: none
              userinfo_signed_response_alg: none
              token_endpoint_auth_method: client_secret_basic

services:
  authelia:
    image: docker.io/authelia/authelia:4.39.13
    configs:
      - source: authelia.configuration.yml
        target: /config/configuration.yml
    depends_on:
      authelia-redis:
        condition: service_healthy
      authelia-database:
        condition: service_healthy
    environment:
      - X_AUTHELIA_CONFIG_FILTERS=template
      - TZ=${TIMEZONE}
    expose:
      - 9091 # api
    extends:
      file: common.yml
      service: log-to-json
    healthcheck:
      disable: false
    networks:
      - proxy
      - authelia
      - ldap
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./authelia/jwks/private.pem:/config/jwks/private.pem:ro

  authelia-redis:
    image: docker.io/valkey/valkey:8-alpine
    command: --save 30 1 --loglevel warning
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    expose:
      - 6379 # api
    extends:
      file: common.yml
      service: log-to-json
    healthcheck:
      test: redis-cli ping
    networks:
      - authelia
    restart: unless-stopped
    volumes:
      - authelia-redis-data:/data

  authelia-database:
    image: docker.io/postgres:14-alpine
    environment:
      - POSTGRES_USER=${AUTHELIA_DB_USERNAME}
      - POSTGRES_PASSWORD=${AUTHELIA_DB_PASSWORD}
      - POSTGRES_DB=${AUTHELIA_DB_DATABASE_NAME}
    expose:
      - 5432 # db
    extends:
      file: common.yml
      service: log-to-json
    healthcheck:
      test: pg_isready --dbname='${AUTHELIA_DB_DATABASE_NAME}' --username='${AUTHELIA_DB_USERNAME}'
    networks:
      - authelia
    restart: unless-stopped
    volumes:
      - authelia-database-data:/var/lib/postgresql/data

  lldap:
    # todo: figure out how to create default authelia user/pwd with lldap_password_manager gruop
    # probably using the lldap bootstrap.sh script as suggested in the readme
    image: docker.io/lldap/lldap:v0.6.2-alpine
    environment:
      - LLDAP_LDAP_BASE_DN=${LLDAP_BASE_DN}
      - LLDAP_LDAP_USER_PASS=${LLDAP_USER_PASS}
      - LLDAP_JWT_SECRET=${LLDAP_JWT_SECRET}
      - LLDAP_KEY_SEED=${LLDAP_KEY_SEED}
      - TZ=${TIMEZONE}
    expose:
      - 3890 # ldap
      # - 6360 # ldaps (ldap over ssl)
      - 17170 # webui
    extends:
      file: common.yml
      service: log-to-json
    networks:
      - ldap
      - proxy
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - lldap-data:/data
